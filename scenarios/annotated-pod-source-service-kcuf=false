# Settings

In GKE, using agent 7.36.0

datadog-values.yaml:
  logs:
    enabled: true
    containerCollectAll: false
    containerCollectUsingFiles: false  // kcuf

k run bash --image=bash \
	--annotations ad.datadoghq.com/bash.logs='[{"source":"dustin", "service":"dustin"}]' \
	--command -- bash -c 'while true; do date; sleep 1; done'

# Results

2022-05-26 15:22:04 UTC | CORE | INFO | (pkg/logs/internal/launchers/docker/launcher.go:136 in run) | Starting Docker launcher

2022-05-26 15:22:19 UTC | CORE | INFO | (pkg/logs/schedulers/ad/scheduler.go:63 in Schedule) | scheduling integration.Config = {
        Name: "",
        Instances: nil,
        InitConfig: nil,
        MetricConfig: nil,
        LogsConfig: []byte(""),
        ADIdentifiers: []string(nil),
        AdvancedADIdentifiers: []integration.AdvancedADIdentifier(nil),
        Provider: "",
        ServiceID: "containerd://96b0f1df399a6aaf939d788686d776db56db84b563c1b2d7a6aca20d0f6cba3f",
        TaggerEntity: "container_id://96b0f1df399a6aaf939d788686d776db56db84b563c1b2d7a6aca20d0f6cba3f",
        ClusterCheck: false,
        NodeName: "",
        Source: ,
        IgnoreAutodiscoveryTags: false,
        MetricsExcluded: false,
        LogsExcluded: false,
} (digest c34a827c00be54f6)

2022-05-26 15:22:19 UTC | CORE | INFO | (pkg/logs/service/services.go:33 in AddService) | add &service.Service{Type:"containerd", Identifier:"96b0f1df399a6aaf939d788686d776db56db84b563c1b2d7a6aca20d0f6cba3f"}

2022-05-26 15:22:19 UTC | CORE | INFO | (pkg/logs/schedulers/ad/scheduler.go:63 in Schedule) | scheduling integration.Config = {
        Name: "",
        Instances: nil,
        InitConfig: nil,
        MetricConfig: nil,
        LogsConfig: []byte(""),
        ADIdentifiers: []string(nil),
        AdvancedADIdentifiers: []integration.AdvancedADIdentifier(nil),
        Provider: "",
        ServiceID: "kubernetes_pod://ae5d119f-cd3e-4114-839d-596d55c53552",
        TaggerEntity: "kubernetes_pod_uid://ae5d119f-cd3e-4114-839d-596d55c53552",
        ClusterCheck: false,
        NodeName: "",
        Source: ,
        IgnoreAutodiscoveryTags: false,
        MetricsExcluded: false,
        LogsExcluded: false,
} (digest 1d2da7034f50b5b4)

2022-05-26 15:22:27 UTC | CORE | INFO | (pkg/logs/schedulers/ad/scheduler.go:63 in Schedule) | scheduling integration.Config = {
        Name: "",
        Instances: {
        }
        InitConfig: nil,
        MetricConfig: nil,
        LogsConfig: []byte("[{\"service\":\"dustin\",\"source\":\"dustin\"}]"),
        ADIdentifiers: []string{"containerd://96b0f1df399a6aaf939d788686d776db56db84b563c1b2d7a6aca20d0f6cba3f"},
        AdvancedADIdentifiers: []integration.AdvancedADIdentifier(nil),
        Provider: "kubernetes",
        ServiceID: "containerd://96b0f1df399a6aaf939d788686d776db56db84b563c1b2d7a6aca20d0f6cba3f",
        TaggerEntity: "",
        ClusterCheck: false,
        NodeName: "",
        Source: kubelet:containerd://96b0f1df399a6aaf939d788686d776db56db84b563c1b2d7a6aca20d0f6cba3f,
        IgnoreAutodiscoveryTags: false,
        MetricsExcluded: false,
        LogsExcluded: false,
} (digest 37df80c9be01ed14)

2022-05-26 15:22:27 UTC | CORE | INFO | (pkg/logs/config/sources.go:42 in AddSource) | adding &LogsSource @ 0xc0000f8620 = {
        Name: "containerd",
        Config: &LogsConfig{
                Type: "containerd",
                Service: "dustin",
                Source: "dustin",
                SourceCategory: "",
                Tags: []string(nil),
                ProcessingRules: []*config.ProcessingRule(nil),
                AutoMultiLine: nil,
                AutoMultiLineSampleSize: 0,
                AutoMultiLineMatchThreshold: 0.000000,
        },
        Status: &LogStatus{status: isPending, err: ""},
        inputs: map[string]bool{},
        Messages: []string{},
        sourceType: "",
        info: map[string]config.InfoProvider{},
        parentSource: 0x0,
        LatencyStats: &util.StatsTracker{allTimeAvg:0, allTimePeak:0, totalPoints:0, timeFrame:86400000000000, bucketFrame:3600000000000, avgPointsHead:(*util.taggedPoint)(nil), peakPointsHead:(*util.taggedPoint)(nil), aggregatedAvgPoints
:[]*util.taggedPoint{}, aggregatedPeakPoints:[]*util.taggedPoint{}, timeProvider:(util.timeProvider)(0x31bdbc0), lock:(*sync.Mutex)(0xc0019f25b8)},
        BytesRead: {0},
        hiddenFromStatus: false,
}

# Status

  containerd
  ----------
    - Type: containerd
      Status: Pending
      BytesRead: 0
      Average Latency (ms): 0
      24h Average Latency (ms): 0
      Peak Latency (ms): 0
      24h Peak Latency (ms): 0
